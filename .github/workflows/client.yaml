name: Client CI/CD workflow

on:
  push:
    branches:
      - main
      - develop
    paths:
      - "client/**"
      - ".github/workflows/client.*"
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Deploy to Netlify
    runs-on: ubuntu-latest
    steps:
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: Checkout
        uses: actions/checkout@v3

      - name: Print all
        run: ls -a

      - name: Remove all except client
        run: |
          find . -type f \! -path "./client*" -delete
          find . -type d \! -path "./client*" \! -path "./.git*" -delete

      - name: Print all
        run: ls -a

      - name: Remove all folders except client
        run: |
          mv client/* .
          rm -r client

      - name: Print all
        run: ls -a

      - name: Get yarn cache dir
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Setup yarn cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-client-modules-${{ hashFiles('client/yarn-lock') }}
          restore-keys: |
            ${{ runner.os }}-client-modules-
            ${{ runner.os }}-

      - name: Install packages
        # working-directory: client
        run: yarn install --frozen-lockfile

      - name: Lint
        # working-directory: client
        run: yarn lint

      - name: Test
        # working-directory: client
        run: yarn test

      - name: Build
        # working-directory: client
        run: yarn build

      - if: ${{ github.event_name == 'pull_request' }}
        name: Deploy to Netlify (draft)
        uses: netlify/actions/cli@master
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        with:
          args: deploy --dir=build

      - if: ${{ github.event_name == 'push' }}
        name: Netlify build
        uses: netlify/actions/cli@master
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          DEBUG: "*"
        with:
          args: build

      - if: ${{ github.event_name == 'push' }}
        name: Deploy to Netlify (production)
        uses: netlify/actions/cli@master
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
          DEBUG: "*"
        with:
          args: deploy --dir=build --prod --message=deploymessage
